tags:
  -  Contacts
summary: update contact by id
operationId: updateContact
description: "Update single contact by id"
security:
  - bearerAuth: []
parameters:
  - name: id
    in: path
    required: true
    schema:
      type: string
      example: 66ddb5851da98e06ed65eba3
requestBody:
  content:
    multipart/form-data:
      schema:
        type: object
        properties:
          name:
            description: "Contact's name"
            type: string
            example: "John Doe"
          isFavourite:
            description: "Shows whether contact is favourite"
            type: boolean
            default: false
            example: true
          email:
            description: "Contact's email"
            type: string
            example: johndoe@mail.com
          phoneNumber:
            description: "Contact's phone number"
            type: string
            example: +380000009
          contactType:
            description: "Type of contact"
            type: string
            enum: ['work', 'home', 'personal']
            example: work
          photo:
            description: "Contact's photo"
            type: string
            format: binary
responses:
  '200':
    description: 'Contact by id updated'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: "Successfully patched a contact!"
            data:
              $ref: '../../../components/schemas/contact.yaml'
  '401':
    $ref: '../../../components/responses/401.yaml'
  '404':
    description: 'Contact not found'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 404
            message:
              type: string
              example: "Contact with {id} is not found"
            data:
              type: object
              example: {}
